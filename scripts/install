#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	### Remove this function if there's nothing to clean before calling the remove script.
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

gitlab_url=$YNH_APP_ARG_GITLAB_URL
token=$YNH_APP_ARG_TOKEN
docker_image=$YNH_APP_ARG_DOCKER_IMAGE

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_print_info "Validating installation parameters..."

config_path=/etc/$app
test ! -e "$config_path" || ynh_die "This path already contains a folder"

# Detect the system architecture
if [ -n "$(uname -m | grep 64)" ]; then
	architecture="x86-64"
elif [ -n "$(uname -m | grep 86)" ]; then
	architecture="i386"
elif [ -n "$(uname -m | grep arm)" ]; then
	architecture="arm"
else
	ynh_die "Unable to detect your achitecture, please open a bug describing \
        your hardware and the result of the command \"uname -m\"." 1
fi

# By default, the runner will use docker to run your builds. PR are welcomes to implement more executors
executor="docker"

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_print_info "Storing installation settings..."

ynh_app_setting_set $app gitlab_url $gitlab_url
ynh_app_setting_set $app token $token
ynh_app_setting_set $app executor $executor
ynh_app_setting_set $app docker_image $docker_image
ynh_app_setting_set $app architecture $architecture
ynh_app_setting_set $app config_path $config_path

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# ADD DOCKER REPO
#=================================================
ynh_print_info "Adding a new repo..."

ynh_install_extra_repo --repo="https://download.docker.com/linux/debian $(lsb_release -cs) stable" --key="https://download.docker.com/linux/debian/gpg" --name="${app}-docker"

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_print_info "Installing dependencies..."

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_print_info "Setting up source files..."

update_src_version() {
	source ./upgrade.d/upgrade.last.sh
	cp ../conf/$architecture.src.default ../conf/$architecture.src
	ynh_replace_string "__VERSION__" "$gitlab_runner_version" "../conf/$architecture.src"
	ynh_replace_string "__SOURCE_FILENAME__" "$gitlab_runner_filename" "../conf/$architecture.src"

	if [ $architecture = "x86-64" ]; then
		ynh_replace_string "__SHA256_SUM__" "$gitlab_runner_x86_64_source_sha256" "../conf/$architecture.src"
	elif [ $architecture = "i386" ]; then
		ynh_replace_string "__SHA256_SUM__" "$gitlab_runner_i386_source_sha256" "../conf/$architecture.src"
	elif [ $architecture = "arm" ]; then
		ynh_replace_string "__SHA256_SUM__" "$gitlab_runner_arm_source_sha256" "../conf/$architecture.src"
	fi
}

update_src_version

tempdir="$(mktemp -d)"

ynh_setup_source $tempdir $architecture

dpkg -i $tempdir/$gitlab_runner_filename

#=================================================
# SPECIFIC SETUP
#=================================================
# SETUP GITLAB RUNNER
#=================================================
ynh_print_info "Configuring Gitlab Runner..."

# Register the runner
ynh_exec_warn_less $app register \
	--non-interactive \
	--url "$gitlab_url" \
	--registration-token "$token" \
	--executor "$executor" \
	--docker-image "$docker_image" \
	--description "Yunohost runner" \
	--tag-list "$executor,$architecture" \
	--run-untagged \
	--locked="false" \

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum "$config_path/config.toml"

#=================================================
# GENERIC FINALIZATION
#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add $app --log "$app" --log_type="systemd"

#=================================================
# END OF SCRIPT
#=================================================

ynh_print_info "Installation of $app completed"
